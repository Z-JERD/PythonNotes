参考文档：https://blog.csdn.net/sanyaoxu_2/article/details/78992113

海量数据纯指的是数据库的海量数据，而高并发指的却包括数据库和服务器的高访问量。
1.海量数据带来的问题无非就是增删改查的问题 解决方案：
    1.对数据库做集群处理
    2.对数据库分库，分表处理
    3.使用缓存
    4.使用页面静态化
    5.优化数据库（包含的内容非常多，比如参数配置，索引优化，sql优化等等）
    6. 分离数据库中活跃的数据
    7. 读写分离

2.高并发的解决方案：
    1.增加web服务器数量，也就是做集群，做负载均衡
    2.页面缓存：
        页面缓存是将应用生成的页面缓存起来，这样就不需要每次都生成页面了，从而可以节省大量的CPU资源
    3.反向代理
    4. 应用程序和静态资源分离
        静态资源主要包括图片、视频、js、css和一些资源文件等,这些文件因为没有状态所以分离比较简单，直接存放到响应的服务器就可以
    5.CDN
        cdn其实是一种特殊的集群页面缓存服务器。CDN就可以理解为分布在每个县城的火车票代售点，用户在浏览网站的时候，
        CDN会选择一个离用户最近的CDN边缘节点来响应用户的请求，这样海南移动用户的请求就不会千里迢迢跑到北京电信机房的服务器（假设源站部署在北京电信机房）上了
        CDN的优势很明显：（1）CDN节点解决了跨运营商和跨地域访问的问题，访问延时大大降低；（2）大部分请求在CDN边缘节点完成，CDN起到了分流作用，减轻了源站的负载。
    6. 增加数据库服务器数量，同样做集群，做负载均衡。分库分表


集群与分布式：
    集群是每台服务器都具有相同的功能，处理请求时调用那台服务器都可以，主要起分流作用。
    分布式是将不同的业务放到不同的服务器中，处理一个请求可能需要用到多台服务器，这样就可以提高一个请求的处理速度，而且集群和分布式也可以同时使用。
    1.集群有两个方式：
        一种是在静态资源集群。另一种是应用程序集群。静态资源集群比较简单。
    应用程序集群在处理过程中最核心的问题就是Session 同步问题。
   2.Session 同步有两种处理方式：
        一种是在Session 发生变化后自动同步到其他服务器
        另一种就是用个程序统一管理Session。所有集群的服务器都使用同一个Session，
        Tomcat 默认使用就是第一种方式，通过简单的配置就可以实现，第二种方式可以使用专门的服务器安装Mencached等高效的缓存程序统一来管理session，
        然后再应用程序中通过重写Request并覆盖getSession 方法来获取制定服务器中的Session。
   3.对于集群来说还有一个核心的问题就是负载均衡，也就是接收到一个请求后具体分配到那个服务器去处理的问题，这个问题可以通过软件处理


反向代理服务器和代理服务器的区别
    代理服务器的作用是代我们获取想要的资源然后将结果返回给我们，所要获取的资源是主动告诉代理服务器的，
    比如，我门想访问Facebook，但是直接访问不了，这时就可以让代理服务器访问，然后将结果返回给我们。

    反向代理服务器是我门正常访问一台服务器的时候，服务器自己去调用了别的服务器资源并将结果返回给我们，我门自己并不知道。
    代理服务器是我们主动使用的，是为我们服务的，他不需要有自己的域名；反向代理服务器是服务器自己试用的，我门并不知道，
    它有自己的域名，我门访问它和访问正常的网址没有任何区别。

    反向代理服务器主要有三个作用：
    1. 可以作为前端服务器跟实际处理请求的服务器集成；
    2. 可以做负载均衡
    3. 转发请求，比如说可以将不同类型的资源请求转发到不同的服务器去处理。
